// Mocks generated by Mockito 5.0.10 from annotations
// in test_app/test/feature_notifications/blocs/notifications_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_app/base/repositories/push_notification_repository.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [PushNotificationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPushNotificationRepository extends _i1.Mock
    implements _i2.PushNotificationRepository {
  MockPushNotificationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> subscribe(String? pushToken) =>
      (super.noSuchMethod(Invocation.method(#subscribe, [pushToken]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> unsubscribe(String? pushToken) =>
      (super.noSuchMethod(Invocation.method(#unsubscribe, [pushToken]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> sendPushMessage(
          {String? message, String? title, int? delay}) =>
      (super.noSuchMethod(
          Invocation.method(#sendPushMessage, [],
              {#message: message, #title: title, #delay: delay}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<bool> requestNotificationPermissions() => (super.noSuchMethod(
      Invocation.method(#requestNotificationPermissions, []),
      returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<String?> getToken({String? vapidKey}) => (super.noSuchMethod(
      Invocation.method(#getToken, [], {#vapidKey: vapidKey}),
      returnValue: Future<String?>.value()) as _i3.Future<String?>);
}
