// Mocks generated by Mockito 5.0.10 from annotations
// in test_app/test/feature_notifications/mocks/notifications_bloc_mock.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_app/feature_notifications/blocs/notifications_bloc.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeNotificationsBlocEvents extends _i1.Fake
    implements _i2.NotificationsBlocEvents {}

class _FakeNotificationsBlocStates extends _i1.Fake
    implements _i2.NotificationsBlocStates {}

/// A class which mocks [NotificationsBlocEvents].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsBlocEvents extends _i1.Mock
    implements _i2.NotificationsBlocEvents {
  MockNotificationsBlocEvents() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void requestNotificationPermissions() =>
      super.noSuchMethod(Invocation.method(#requestNotificationPermissions, []),
          returnValueForMissingStub: null);
  @override
  void sendMessage(String? message, {String? title, int? delay}) =>
      super.noSuchMethod(
          Invocation.method(
              #sendMessage, [message], {#title: title, #delay: delay}),
          returnValueForMissingStub: null);
}

/// A class which mocks [NotificationsBlocStates].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsBlocStates extends _i1.Mock
    implements _i2.NotificationsBlocStates {
  MockNotificationsBlocStates() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get permissionsAuthorized =>
      (super.noSuchMethod(Invocation.getter(#permissionsAuthorized),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
}

/// A class which mocks [NotificationsBlocType].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsBlocType extends _i1.Mock
    implements _i2.NotificationsBlocType {
  MockNotificationsBlocType() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NotificationsBlocEvents get events =>
      (super.noSuchMethod(Invocation.getter(#events),
              returnValue: _FakeNotificationsBlocEvents())
          as _i2.NotificationsBlocEvents);
  @override
  _i2.NotificationsBlocStates get states =>
      (super.noSuchMethod(Invocation.getter(#states),
              returnValue: _FakeNotificationsBlocStates())
          as _i2.NotificationsBlocStates);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}
