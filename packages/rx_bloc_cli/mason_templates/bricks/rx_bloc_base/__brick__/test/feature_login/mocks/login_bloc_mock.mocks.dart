// Mocks generated by Mockito 5.0.10 from annotations
// in test_app/test/feature_login/mocks/login_bloc_mock.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_app/feature_login/blocs/login_bloc.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeLoginBlocEvents extends _i1.Fake implements _i2.LoginBlocEvents {}

class _FakeLoginBlocStates extends _i1.Fake implements _i2.LoginBlocStates {}

/// A class which mocks [LoginBlocEvents].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginBlocEvents extends _i1.Mock implements _i2.LoginBlocEvents {
  MockLoginBlocEvents() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setUsername(String? username) =>
      super.noSuchMethod(Invocation.method(#setUsername, [username]),
          returnValueForMissingStub: null);
  @override
  void setPassword(String? password) =>
      super.noSuchMethod(Invocation.method(#setPassword, [password]),
          returnValueForMissingStub: null);
  @override
  void login() => super.noSuchMethod(Invocation.method(#login, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [LoginBlocStates].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginBlocStates extends _i1.Mock implements _i2.LoginBlocStates {
  MockLoginBlocStates() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<String> get username =>
      (super.noSuchMethod(Invocation.getter(#username),
          returnValue: Stream<String>.empty()) as _i3.Stream<String>);
  @override
  _i3.Stream<String> get password =>
      (super.noSuchMethod(Invocation.getter(#password),
          returnValue: Stream<String>.empty()) as _i3.Stream<String>);
  @override
  _i3.Stream<bool> get loggedIn =>
      (super.noSuchMethod(Invocation.getter(#loggedIn),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
  @override
  _i3.Stream<bool> get showErrors =>
      (super.noSuchMethod(Invocation.getter(#showErrors),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
  @override
  _i3.Stream<bool> get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
  @override
  _i3.Stream<String> get errors =>
      (super.noSuchMethod(Invocation.getter(#errors),
          returnValue: Stream<String>.empty()) as _i3.Stream<String>);
}

/// A class which mocks [LoginBlocType].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginBlocType extends _i1.Mock implements _i2.LoginBlocType {
  MockLoginBlocType() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LoginBlocEvents get events =>
      (super.noSuchMethod(Invocation.getter(#events),
          returnValue: _FakeLoginBlocEvents()) as _i2.LoginBlocEvents);
  @override
  _i2.LoginBlocStates get states =>
      (super.noSuchMethod(Invocation.getter(#states),
          returnValue: _FakeLoginBlocStates()) as _i2.LoginBlocStates);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}
